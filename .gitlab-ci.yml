cache:
  key: bravera
  paths:
    - deps/
    - _build/
    - assets/node_modules/

test:
  image: bitwalker/alpine-elixir-phoenix:latest
  services:
  - postgres:latest
  variables:
    MIX_ENV: "test"
  script:
    - cd assets && npm install && cd .. # cache NPM modules for future
    - mix do deps.get, test --exclude skip

build_staging:
  stage: build
  environment: staging
  only:
    - staging
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://localhost:2375
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH/staging
    DOCKER_BUILD: "true"
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA  --build-arg=$DOCKER_BUILD .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA

staging:
  cache: {} # no need for cache
  stage: deploy
  environment: staging
  only:
    - staging
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://localhost:2375
    CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH/staging
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:latest


production:
  stage: deploy
  environment: production
  image: docker:git
  only:
  - master
  script:
  - apk add --no-cache curl
  - L=/usr/local/bin/flynn && curl -sSL -A "`uname -sp`" https://dl.flynn.io/cli | zcat >$L && chmod +x $L
  - flynn cluster add -p $FLYNN_TLS_PIN $FLYNN_CLUSTER_NAME $FLYNN_CONTROLLER_URL $FLYNN_CONTROLLER_KEY --git-url=$FLYNN_GIT_URL
  - flynn -a bravera remote add flynn
  - git checkout master
  - git push flynn master
  - flynn run mix ecto.migrate