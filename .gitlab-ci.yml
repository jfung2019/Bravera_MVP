cache:
  key: bravera
  paths:
    - deps/
    - _build/
    - assets/node_modules/

test:
  image: bitwalker/alpine-elixir-phoenix:latest
  services:
  - postgres:latest
  variables:
    MIX_ENV: "test"
  script:
    - cd assets && npm install && cd .. # cache NPM modules for future
    - mix do deps.get, test --exclude skip

build_staging:
  stage: build
  environment: staging
  only:
    - staging
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://localhost:2375
    CONTAINER_IMAGE: registry.gitlab.com/braveratech/bravera_mvp_sept2018/staging
    DOCKER_BUILD: "true"
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --build-arg DOCKER_BUILD .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA

staging:
  cache: {} # no need for cache
  stage: deploy
  environment: staging
  only:
    - staging
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://localhost:2375
    CONTAINER_IMAGE: registry.gitlab.com/braveratech/bravera_mvp_sept2018/staging
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:latest


production:
  stage: deploy
  environment: production
  image: bitwalker/alpine-elixir-phoenix:latest
  variables:
    MIX_ENV: "dev"
    REFSPEC: $CI_COMMIT_SHA
  only:
  - master
  before_script:
    - apk add --no-cache openssh-client procps
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p /root/.ssh
    - cp .deliver/ssh_config /root/.ssh/config
    - chmod -R 700 /root/.ssh
    - mix do deps.get, deps.compile
    - git branch -f master HEAD
    - mix edeliver build release --revision="$CI_COMMIT_REF_NAME" -P
  script:
    - mix edeliver deploy release to production -P
    - mix edeliver start production -P
    - mix edeliver migrate production -P
    - mix edeliver ping production -P