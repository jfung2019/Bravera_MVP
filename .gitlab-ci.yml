cache:
  key: bravera
  paths:
    - deps/
    - _build/
    - assets/node_modules/

test:
  image: plangora/alpine-elixir-phoenix:otp-22.2.7-elixir-1.10.2
  services:
  - postgres:latest
  variables:
    MIX_ENV: "test"
    DB_HOST: postgres
    POSTGRES_DB: omega_bravera_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  script:
    - cd assets && npm install && cd .. # cache NPM modules for future
    - mix do deps.get, test --exclude skip

staging:
  stage: deploy
  environment: staging
  image: plangora/alpine-elixir-phoenix:otp-22.2.7-elixir-1.10.2
  variables:
    MIX_ENV: "dev"
    REFSPEC: staging
  only:
    - staging
  before_script:
    - apk add --no-cache openssh-client procps
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p /root/.ssh
    - cp .deliver/ssh_config_staging /root/.ssh/config
    - mv -f .deliver/config_staging .deliver/config
    - chmod -R 700 /root/.ssh
    - mix do deps.get, deps.compile
    - git branch -f staging HEAD
  script:
    - mix edeliver update staging -P --start-deploy
    - mix edeliver migrate staging -P
    - mix edeliver ping staging -P

production:
  stage: deploy
  environment: production
  image: plangora/alpine-elixir-phoenix:otp-22.2.7-elixir-1.10.2
  variables:
    MIX_ENV: "dev"
    REFSPEC: master
  only:
  - master
  before_script:
    - apk add --no-cache openssh-client procps
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p /root/.ssh
    - cp .deliver/ssh_config /root/.ssh/config
    - chmod -R 700 /root/.ssh
    - mix do deps.get, deps.compile
    - git branch -f master HEAD
  script:
    - mix edeliver update production -P --start-deploy
    - mix edeliver migrate production -P
    - mix edeliver ping production -P